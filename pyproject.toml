[build-system]
requires = ["setuptools >= 61.1.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "optunahub"
description = "OptunaHub"
readme = "README.md"
authors = [
  {name = "Optuna team"}
]
requires-python = ">=3.8"
dependencies = [
  "optuna",
  "GitPython",
  "PyGithub>=1.59",
]
dynamic = ["version"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.optional-dependencies]
checking = [
  "pre-commit",
  "mypy",
  "ruff",
  "types-toml",
]
docs = [
  "plotly",
  "sphinx",
  "sphinx_rtd_theme",
  "sphinx-gallery",
  "matplotlib",
  "optuna",
  "optunahub",
]
test = [
  "coverage",
  "pytest",
  "pytest-timeout",
]

[project.urls]
homepage = "https://hub.optuna.org/"
repository = "https://github.com/optuna/optunahub"
documentation = "https://optuna.github.io/optunahub/"
bugtracker = "https://github.com/optuna/optunahub/issues"

[tool.setuptools.packages.find]
include = ["optunahub*"]

[tool.setuptools.dynamic]
version = {attr = "optunahub.version.__version__"}

[tool.setuptools.package-data]
"optunahub" = [
  "py.typed",
]

[tool.ruff]
line-length = 99

[tool.ruff.lint]
extend-select = [
    "I",
]

[tool.ruff.lint.isort]
known-third-party = ['optuna']
lines-after-imports = 2
force-single-line = true
force-sort-within-sections = true
order-by-type = false

[tool.mypy]
# Options configure mypy's strict mode.
warn_unused_configs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
strict_equality = true
extra_checks = true
no_implicit_reexport = true
ignore_missing_imports = true
explicit_package_bases = true
exclude = [
    ".venv",
    "venv",
    "build",
    "work",
    ".*/.ipynb_checkpoints/.*",
]
